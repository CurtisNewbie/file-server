<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yongj.dao.FileInfoMapper">
  <update id="logicDelete">
    UPDATE file_info
    SET is_logic_deleted = 1,
    logic_delete_time = NOW()
    WHERE id = #{id}
    AND is_logic_deleted = 0
  </update>

  <update id="markFilePhysicDeleted">
    UPDATE file_info
    SET is_physic_deleted = 1,
    update_time = #{deleteDate},
    update_by = "system",
    physic_delete_time = #{deleteDate}
    WHERE id = #{id}
    AND is_physic_deleted = 0
  </update>

  <select id="countFileListForUserSelective" resultType="java.lang.Long">
    select count(*)
    from file_info fi
    <include refid="selectListCond"/>
  </select>

  <sql id="selectListCond">
    <if test="p.filterOwnedFiles == false">
      left join file_sharing fs on (fi.id = fs.file_id and fs.user_id = #{p.userId})
    </if>
    <where>
      <choose>
        <when test="p.filterOwnedFiles == true">
          and fi.uploader_id = #{p.userId}
          <if test="p.userGroup != null">
            and fi.user_group = #{p.userGroup}
          </if>
        </when>
        <otherwise>
          <choose>
            <when test="p.userGroup == 0">
              and fi.user_group = 0
            </when>
            <when test="p.userGroup == 1">
              and fi.user_group = 1
              and (
              fi.uploader_id = #{p.userId}
              or (fs.id is not null and fs.is_del = 0)
              )
            </when>
            <otherwise>
              and (
              fi.user_group = 0
              or fi.uploader_id = #{p.userId}
              or (fs.id is not null and fs.is_del = 0)
              )
            </otherwise>
          </choose>
        </otherwise>
      </choose>
      <if test="p.filename != null and p.filename != ''">
        and fi.name like "%"#{p.filename}"%"
      </if>
      <if test="p.parentFile != null and p.parentFile != ''">
        and fi.parent_file = #{p.parentFile}
      </if>
      <if test="p.fileType != null">
        and fi.file_type = #{p.fileType}
      </if>
      and fi.is_logic_deleted = 0
      and fi.is_del = 0
    </where>
  </sql>

  <select id="selectFileListForUserSelective" resultType="com.yongj.dao.FileInfo">
    select fi.id, fi.name, fi.uuid, fi.size_in_bytes, fi.user_group, fi.uploader_id, fi.uploader_name, fi.upload_time
    from file_info fi
    <include refid="selectListCond"/>
    order by id desc
  </select>

  <select id="countFileListForUserAndTag" resultType="java.lang.Long">
    select count(*)
    from file_info fi
    left join file_sharing fs on (fi.id = fs.file_id and fs.user_id = #{userId})
    <if test="tagName != null and tagName != ''">
      left join file_tag ft on (ft.user_id = #{userId} and fi.id = ft.file_id)
      left join tag t on (ft.tag_id = t.id)
    </if>
    <where>
      fi.is_del = 0
      and fi.is_logic_deleted = 0
      and (
      fi.user_group = 0
      or (fi.user_group = 1 and fi.uploader_id = #{userId})
      or (fs.id IS NOT NULL and fs.is_del = 0)
      )
      <if test="tagName != null and tagName != ''">
        and t.name = #{tagName}
        and ft.is_del = 0
        and t.is_del = 0
      </if>
      <if test="filename != null and filename != ''">
        and fi.name like "%"#{filename}"%"
      </if>
    </where>
  </select>

  <select id="selectFileListForUserAndTag" resultType="com.yongj.dao.FileInfo">
    select fi.id, fi.name, fi.uuid, fi.size_in_bytes, fi.user_group, fi.uploader_id, fi.uploader_name, fi.upload_time
    from file_info fi
    left join file_sharing fs on (fi.id = fs.file_id and fs.user_id = #{userId})
    left join file_tag ft on (ft.user_id = #{userId} and fi.id = ft.file_id)
    left join tag t on (ft.tag_id = t.id)
    where
      (
        fi.user_group = 0
        or (fi.user_group = 1 and fi.uploader_id = #{userId})
        or (fs.id IS NOT NULL and fs.is_del = 0)
      )
      and t.name = #{tagName}
      <if test="filename != null and filename != ''">
        and fi.name like "%"#{filename}"%"
      </if>
      and fi.is_del = 0
      and ft.is_del = 0
      and t.is_del = 0
      and fi.is_logic_deleted = 0
    order by id desc
  </select>

  <select id="selectValidateInfoById" resultType="com.yongj.vo.FileDownloadValidInfo">
    select fi.id 'file_id', fi.user_group, fi.uploader_id, fs.id 'file_sharing_id', uv.id 'user_folder_id', fi.is_logic_deleted
      fi.file_type
    from file_info fi
    left join file_sharing fs on (fi.id = fs.file_id and fs.user_id = #{userId} and fs.is_del = 0)
    left join file_vfolder ff on (fi.uuid = ff.uuid and ff.is_del = 0)
    left join user_vfolder uv on (uv.folder_no = ff.folder_no and uv.user_no = #{userNo} and uv.is_del = 0)
    where fi.id = #{id} and fi.is_del = 0
  </select>

  <select id="selectNameById" resultType="java.lang.String">
    select name
    from file_info
    where id = #{id}
    and is_del = 0
  </select>

  <select id="selectUploaderIdById" resultType="java.lang.Integer">
    select uploader_id
    from file_info
    where id = #{id}
  </select>

  <select id="findInfoForPhysicalDeleting" resultType="com.yongj.dao.FileInfo">
    select id, uuid, uploader_id, fs_group_id, file_type
    from file_info
    where is_logic_deleted = 1
    and is_physic_deleted = 0
  </select>

  <select id="selectDownloadInfoById" resultType="com.yongj.dao.FileInfo">
    select fs_group_id, uuid, uploader_id
    from file_info
    where id = #{id}
    and is_logic_deleted = 0
  </select>

</mapper>